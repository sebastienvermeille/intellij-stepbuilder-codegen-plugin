name: Build
# Ensure that the code compiles and that tests pass
on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v3.6.0
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1.1.0
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11
      - name: Run Linters and Test
        run: ./gradlew check
      - name: Verify Plugin
        run: ./gradlew verifyPlugin

#  # Build plugin with buildPlugin Gradle task and provide the artifact for the next workflow jobs
#  # Requires test job to be passed
#  build:
#    name: Build
#    needs: test
#    runs-on: ubuntu-latest
#    outputs:
#      name: ${{ steps.properties.outputs.name }}
#      version: ${{ steps.properties.outputs.version }}
#      changelog: ${{ steps.properties.outputs.changelog }}
#      artifact: ${{ steps.properties.outputs.artifact }}
#    steps:
#      - name: Fetch Sources
#        uses: actions/checkout@v3.6.0
#      - name: Setup Java
#        uses: actions/setup-java@v3
#        with:
#          distribution: zulu
#          java-version: 11
#      - name: Export Properties
#        id: properties
#        shell: bash
#        run: |
#          PROPERTIES="$(./gradlew properties --console=plain -q)"
#          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
#          NAME="$(echo "$PROPERTIES" | grep "^pluginName:" | cut -f2- -d ' ')"
#          CHANGELOG="$(./gradlew getChangelog --unreleased --no-header --console=plain -q)"
#          CHANGELOG="${CHANGELOG//'%'/'%25'}"
#          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
#          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
#          ARTIFACT="${NAME}-${VERSION}.zip"
#
#          echo "::set-output name=version::$VERSION"
#          echo "::set-output name=name::$NAME"
#          echo "::set-output name=changelog::$CHANGELOG"
#          echo "::set-output name=artifact::$ARTIFACT"
#
#      # Build artifact using buildPlugin Gradle task
#      - name: Build Plugin
#        run: ./gradlew buildPlugin
#
#      # Upload plugin artifact to make it available in the next jobs
#      - name: Upload artifact
#        uses: actions/upload-artifact@v2.2.3
#        with:
#          name: plugin-artifact
#          path: ./build/distributions/${{ steps.properties.outputs.artifact }}
#
#  # Verify built plugin using IntelliJ Plugin Verifier tool
#  # Requires build job to be passed
#  verify:
#    name: Verify
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Fetch Sources
#        uses: actions/checkout@v3.6.0
#      - name: Setup Java
#        uses: actions/setup-java@v2
#        with:
#          distribution: zulu
#          java-version: 11
#
#      # Set environment variables
#      - name: Export Properties
#        id: properties
#        shell: bash
#        run: |
#          PROPERTIES="$(./gradlew properties --console=plain -q)"
#          IDE_VERSIONS="$(echo "$PROPERTIES" | grep "^pluginVerifierIdeVersions:" | base64)"
#
#          echo "::set-output name=ideVersions::$IDE_VERSIONS"
#          echo "::set-output name=pluginVerifierHomeDir::~/.pluginVerifier"
#      # Run IntelliJ Plugin Verifier action using GitHub Action
#      - name: Verify Plugin
#        run: ./gradlew runPluginVerifier -Pplugin.verifier.home.dir=${{ steps.properties.outputs.pluginVerifierHomeDir }}
